// Mocks generated by Mockito 5.3.2 from annotations
// in weather_app/test/core/bloc/splash/splash_screen_state_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:shared_preferences/shared_preferences.dart' as _i2;
import 'package:weather_app/core/data/prefs/shared_helper.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSharedPreferences_0 extends _i1.SmartFake
    implements _i2.SharedPreferences {
  _FakeSharedPreferences_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SharedHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedHelper extends _i1.Mock implements _i3.SharedHelper {
  MockSharedHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.SharedPreferences> getInstance() => (super.noSuchMethod(
        Invocation.method(
          #getInstance,
          [],
        ),
        returnValue:
            _i4.Future<_i2.SharedPreferences>.value(_FakeSharedPreferences_0(
          this,
          Invocation.method(
            #getInstance,
            [],
          ),
        )),
      ) as _i4.Future<_i2.SharedPreferences>);
  @override
  _i4.Future<bool> saveString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> saveBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<String?> getString(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getString,
          [key],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);
  @override
  _i4.Future<bool> clearStorage() => (super.noSuchMethod(
        Invocation.method(
          #clearStorage,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<dynamic> clearKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #clearKey,
          [key],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
}
